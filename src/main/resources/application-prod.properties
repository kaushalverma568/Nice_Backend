server.port=8080
server.servlet.context-path=/nice

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/nice_db
spring.datasource.username=nice_kody
spring.datasource.password=nice@kody@2.3.4

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql = true

spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml
spring.main.allow-bean-definition-overriding=true

spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=20MB

# JMS Configuration
spring.activemq.user=admin
spring.activemq.password=admin
spring.activemq.broker-url=tcp://localhost:61616?jms.redeliveryPolicy.maximumRedeliveries=6
spring.activemq.packages.trust-all=true

## File Storage Properties
file.upload-dir=./uploads

service.url=https://service.deliverynice.com/nice/
local.service.url=http://localhost:8080/nice/
static.url=https://service.deliverynice.com/
application.name=Nice
application.name.fr=\u0646\u0627\u064A\u0633


admin.url=https://admin.deliverynice.com/#/

email.background=niceapp-background.png
product.list.image=product_list.png
product.detail.image=product_detail.png

aws.access.key.id= AKIAW7SU6WZUGLCEB57Y
aws.access.key.secret= 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
aws.region= me-south-1
aws.s3.bucket= nice.app
s3.url= https://nice.app.s3.me-south-1.amazonaws.com/


# netty-socketio configuration
socketio.host: 0.0.0.0
socketio.port: 8601
# Set the maximum length of processing data per frame to prevent others from using large data to attack the server
socketio.maxFramePayloadLength: 1048576
# Set maximum content length for http interaction
socketio.maxHttpContentLength: 1048576
# Size of socket connections (e.g., listening on only one port box thread group is 1)
socketio.bossCount: 1
socketio.workCount: 100
socketio.allowCustomRequests: true
# Protocol upgrade timeout (milliseconds), default 10 seconds.HTTP handshake upgrade to ws protocol timeout
socketio.upgradeTimeout: 1000000
# Ping message timeout (milliseconds), default 60 seconds, within which a timeout event is sent if no heartbeat message is received
socketio.pingTimeout: 6000000
# Ping message interval (milliseconds), default 25 seconds.Client sends a heartbeat message interval to server
socketio.pingInterval: 25000

#Hesabe Payment Configuration
hesabe.version=2.0
hesabe.accessCode=6ad951dc-1058-4360-90d9-77365d4b88d0 
hesabe.merchantCode=26623020
hesabe.paymentType=0
hesabe.key=jAvkVmK6XN3e8LymAEqlqL5ZBd0zbwWx
hesabe.iv=XN3e8LymAEqlqL5Z
hesabe.url=https://api.hesabe.com/