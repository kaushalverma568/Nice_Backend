CREATE OR REPLACE FUNCTION PRODUCT_RATE_UPDATE_LOG()
  RETURNS TRIGGER AS
$BODY$
BEGIN
    IF NEW.DISCOUNTED_RATE IS DISTINCT FROM OLD.DISCOUNTED_RATE THEN
       INSERT INTO PRODUCT_RATE_UPDATE_HISTORY(PRODUCT_VARIANT_ID,NEW_DISCOUNTED_RATE,OLD_DISCOUNTED_RATE,UPDATED_AT ,UPDATED_BY)
       VALUES(OLD.ID,NEW.DISCOUNTED_RATE,OLD.DISCOUNTED_RATE,NOW(),NEW.UPDATED_BY);
   END IF;
   
	IF NEW.RATE IS DISTINCT FROM OLD.RATE THEN
       INSERT INTO PRODUCT_RATE_UPDATE_HISTORY(PRODUCT_VARIANT_ID,NEW_RATE,OLD_RATE,UPDATED_AT ,UPDATED_BY)
       VALUES(OLD.ID,NEW.RATE,OLD.RATE,NOW(),NEW.UPDATED_BY);
   END IF;
   
   RETURN NEW;
END;
$BODY$

LANGUAGE plpgsql VOLATILE
COST 100;


CREATE TRIGGER PRODUCT_RATE_UPDATE
  AFTER UPDATE OF DISCOUNTED_RATE,RATE
  ON PRODUCT_VARIANT
  FOR EACH ROW
  EXECUTE PROCEDURE PRODUCT_RATE_UPDATE_LOG();